Como a visualização de um diff entre duas versões de um arquivo ajuda você a ver 
o bug que foi introduzido?
    O primeiro comando visto, FC (Windows) ou diff (Mac ou Linux) pode nos ajudar muito 
    com o controle de versão. Este comando automaticamente pontua diferenças entre
    versões diferentes de um código. É possível visualizar o que foi removido da versão
    antiga, o que foi acrescentado na versão nova e o que permaneceu inalterado facilmente.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    O acesso ao histórico inteiro de um arquivo pode mostrar ao próprio programador
    a evolução do seu aprendizado ao longo do tempo, fazendo-o também refletir não
    somente no próprio código que ele escreve no arquivo mas também no quão ele está
    aprendendo sobre o assunto

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: This gives more liberty to the programmer, choosing commits at the right
    moments.
    Comparing to versions automatically saved, this type of version control does
    not include unnecessary changing registers.
    Cons: Programmar may forget to do the commits, making the differences between versions too big.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Google Docs does not work with files with relations between themselves. A
    change in a document does not imply a change in another document.
    Git works with related files, where a change in a file may imply a change in
    another file, like html and css files.

How can you use the commands git log and git diff to view the history of files?

    I use git log to see the commit ids and their comments and git diff to see
    the differences between two commits.

How might using version control make you more confident to make changes that
could break something?

    By using the checkout git command, I can recover old versions without specific bugs that I can fix easily.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use Git to improve my development in Python projects. I believe they
    will be awesome and will be improved faster than before.